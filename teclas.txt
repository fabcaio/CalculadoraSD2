;Representacao numerica

20H.0 BIT SINAL_X 	;bit=0 positivo, bit=1 negativo
20H.1 BIT SINAL_Y 	;bit=0 positivo, bit=1 negativo
20H.2 BIT SINAL_Z 	;bit=0 positivo, bit=1 negativo
20H.3 BIT SINAL_T	;bit=0 positivo, bit=1 negativo
20H.4 BIT ERRO 		;bit=0 OK, bit=1 ERRO
20H.5 BIT OVFL 		;bit=0 OK, bit=1 ultrapassagem

CHS:
	XRL 20H, #01H	;Inverte o bit 20H.0 (SINAL_X)

ou
;JB SINAL_X, TROCA
;SETB SINAL_X
;TROCA: CLR SINAL_X
;RET
	
CLX:
	MOV XL, #0H
	MOV XH, #0H
	CLR SINAL_X
	RET

CLS:
	MOV XL, #0H
	MOV XH, #0H
	MOV YL, #0H
	MOV YH, #0H
	MOV ZL, #0H
	MOV ZH, #0H
	MOV TL, #0H
	MOV TH, #0H	
	RET

ENTER:
	MOV YH, XH
	MOV YL, YL
	MOV ZH, YH
	MOV ZL, YL
	MOV TH, ZH
	MOV TL, ZL
	MOV XH, #0H
	MOV XL, #0H

	MOV A, 20H
	RL A
	ANL A, #0EH
	MOV 20H, A
	RET

DROP:

SWAP:
	MOV XH, AUX1H
	MOV XL, AUX1L
	MOV XH, XH
	MOV XL, YL
	MOV YH, AUX1H
	MOV YL, AUX1L
	RET

SOMAR:
	MOV AUX2H, #0H
	JB SINAL_X, XNEG
	JB SINAL_Y, YNEG
	MOV A, AUX2H
	JNZ SUMRET	
	
	XYPOS:
	MOV A, XL
	ADD A, YL
	DA A
	MOV XL, A

	MOV A, XH
	CLR C
	ADDC A, YH
	DA A
	MOV XH, A
	RET

	XNEG:
	MOV AUX1H, XH		;SALVA XH
	MOV AUX1L, XL		;SALVA XL
	JB SINAL_Y, XYNEG
	MOV A, #9AH
	CLR C
	SUBB A, XL		;Calcula o complemento 10 de XL
	DA A
	ADD A, YL
	DA A
	MOV XL, A
	ADDC A, #0H
	MOV AUX2L, A		;Salva o carry

	MOV A, #9AH
	CLR C
	SUBB A, XH		;Calcula o complemento 10 de XH
	DA A
	ADD A, YH
	ADD A, AUX2L
	DA A
	MOV XH, A

	CLR C
	SUBB AUX1H, YH
	JC S1			;Vai para S1 se Y>X
	
	SUBB AUX1L, YL
	JC S1			;Vai para S1 se Y>X

	MOV A, #9AH
	CLR C
	SUBB A, XL		;Calcula o complemento 10 de XL
	DA A
	MOV A, #9AH
	CLR C
	SUBB A, XH		;Calcula o complemento 10 de XH
	DA A
	
	INC AUX2H
	RET

	S1:
	CLR SINAL_X		;Positiva o sinal do resultado

	INC AUX2H
	RET

	YNEG:
	MOV AUX1H, XH		;SALVA XH
	MOV AUX1L, XL		;SALVA XL
	MOV A, #9AH
	CLR C
	SUBB A, XL		;Calcula o complemento 10 de XL
	DA A
	ADD A, YL
	DA A
	MOV XL, A
	ADDC A, #0H
	MOV AUX2L, A		;Salva o carry

	MOV A, #99H
	CLR C
	SUBB A, XH		;Calcula o complemento 10 de XH
	DA A
	ADD A, YH
	ADD A, AUX2L
	DA A
	MOV XH, A

	CLR C
	SUBB AUX1H, YH
	JC S1			;Vai para S1 se Y>X
	
	SUBB AUX1L, YL
	JC S1			;Vai para S1 se Y>X

	INC AUX2H
	RET

	S1:
	SETB SINAL_X		;Negativa o sinal do resultado
	MOV A, #9AH
	CLR C
	SUBB A, XL		;Calcula o complemento 10 de XL
	DA A
	MOV A, #99H
	CLR C
	SUBB A, XH		;Calcula o complemento 10 de XH
	DA A

	INC AUX2H
	RET

	XYNEG:
	MOV A, XL
	ADD A, YL
	DA A
	MOV XL, A

	MOV A, XH
	CLR C
	ADDC A, YH
	DA A
	MOV XH, A

	INC AUX2H
	RET

	SUMRET:
	RET

SUBT:
	XRL 20H, #02H	;Inverte o bit 20H.1 (SINAL_Y)
	LCALL SOMAR
	RET

MULT:
	MOV AUX1L, YL
	MOV AUX1H, YH
	MOV YL, XL
	MOV YH, XH
	JB SINAL_X, M1
	DEC AUX1L

	MU1:
	LCALL SOMAR
	DJNZ AUX1L, MU1

	MU2:
	MOV AUX1L, YL
	DJNZ AUX2H, MU1

	JNB SINAL_X, MU3
	JNB SINAL_Y, MU3
	
	SETB SINAL_X
	RET
	
	MU3:
	RET

DIVID:

MODULO:
	CLR SINAL_X
	RET

RRX:
	MOV A, XL
	CLR C
	RLC A

RLX:

SRX:

SLX:


XP2:
	MOV YL, XL	; YL=XL
	MOV YH, XH	; YH=XH
	LCALL MULT	; X*(Y=X)
	RET

YPX:
	MOV A, XL	; A = XL
	SUBB A, #01H	; A = XL - 1
	MOV AUX1, A	; AUX1 = A
	MOV AUX2, XH	; AUX2 = XH

	PWR1:
	MOV YL, XL	; YL=XL
	MOV YH, XH	; YH=XH
	LCALL MULT	; X*(Y=X)
	DJNZ AUX1, PWR1	; Se AUX1 =! 0, vai para PWR1

	MOV AUX1, XL	; AUX1 = XL
	DJNZ AUX2, PWR1	; Se AUX2 =! 0, vai para PWR2

	PWR2:
	MOV YL, XL	; YL=XL
	MOV YH, XH	; YH=XH
	LCALL MULT	; X*(Y=X)
	DJNZ AUX1, PWR2	; Se AUX1 =! 0, vai para PWR2
	RET

RSUP:
	MOV AUX1H, XH
	MOV AUX1L, XL
	MOV XH, TH
	MOV XL, TL
	MOV TH, ZH
	MOV TL, ZL
	MOV ZH, YH
	MOV ZL, YL
	MOV YH, AUX1H
	MOV YL, AUX1L

	MOV A, 20H
	RR A
	ANL A, #0FH
	MOV 20H, A
	RR A
	RR A
	RR A
	RR A
	ORL A, 20H
	ANL A, #0FH
	MOV 20H, A
	RET

RSDW:
	MOV AUX1H, XH
	MOV AUX1L, XL
	MOV XH, YH
	MOV XL, YL
	MOV YH, ZH
	MOV YL, ZL
	MOV ZH, TH
	MOV ZL, TL
	MOV TH, AUX1H
	MOV TL, AUX1L

	MOV A, 20H
	RL A
	ANL A, #0FH
	MOV 20H, A
	RL A
	RL A
	RL A
	RL A
	ORL A, 20H
	ANL A, #0FH
	MOV 20H, A
	RET	

STO:
	MOV MEMH, XH
	MOV MEML, XL
	RET

RCL:
	MOV XH, MEMH
	MOV XL, MEML
	RET
